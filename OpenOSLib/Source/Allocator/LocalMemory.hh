//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : LocalMemory.hh
//  @ Date : 12.04.2006
//  @ Author : 
//
//


#if !defined(_LOCALMEMORY_H)
#define _LOCALMEMORY_H

#include "OpenOSIncludes.hh"

#include "Allocator/Allocator.hh"

//! allocator for a local memory area within the heap

/*! The LocalMemory Allocator provides an allocateable memory area of a specified size
 *  within the application heap.
 */

class LocalMemory : public Allocator
{
public:
    LocalMemory(int Size);
    LocalMemory();
    
    virtual ~LocalMemory();

	void initialize( int Size = 0 );
	//!< initialize the allocateable memory area
	
	void deinitialize();
	//!< deinitialize the allocateable memory area


    virtual ASAAC_Address allocate(int Size);
    virtual void free(ASAAC_Address AllocatedAddress);
    
    virtual void reset();
    
    virtual unsigned int getSize() const;
    virtual unsigned int getFreeMemory() const;
    virtual unsigned int getUsedMemory() const;

	virtual unsigned long getAllocationCounter() const;

protected:
	bool	m_IsInitialized;

	char* 	m_BaseAddress; // Type char is used to faciliate bytewise increases easily
	int 	m_MemorySize;
	int		m_UsedMemory;
	
private:
	// no implicit assignment and copying
	LocalMemory( const LocalMemory& Source );
	LocalMemory& operator= ( const LocalMemory& Source );

};


#endif  //_LOCALMEMORY_H
